import{j as e}from"./TransitionGroupContext-9d36972e.js";import{R as d}from"./index-f1f749bf.js";import{Z as b,d as M,M as r,l as S,m as L,u as B,B as m,W as P,aM as D,N as T,Q as c,O as W,V as x,J as h,a5 as F,al as j,aC as O,T as f,aN as _,aO as V}from"./papaparse.min-b66e70e7.js";import{w as z,e as n}from"./Play-87fed129.js";import{f as A}from"./index-bcfaa842.js";import{u as g}from"./react-router-19e5b27c.js";import{g as $}from"./_baseForOwn-9b89c4b6.js";import{d as H}from"./ViewColumn-83ad192f.js";import{B as N}from"./Button-352c3435.js";import{T as Q,a as y}from"./ToggleButtonGroup-93d9af56.js";import"./assertThisInitialized-ad1db8e7.js";import"./_commonjsHelpers-042e6b4d.js";import"./_arrayIncludes-2cfb33ae.js";import"./index-96c5f47c.js";import"./isPlainObject-07477f89.js";import"./debounce-213cd46f.js";import"./iframe-ed7f5a3f.js";import"../sb-preview/runtime.js";import"./index-4d501b15.js";import"./filter-f99df4e5.js";import"./LocalizationProvider-a287304f.js";import"./react-router-dom-60ea8218.js";import"./tiny-invariant-dd7d57d2.js";import"./uniq-0d482d7b.js";import"./cloneDeep-91467704.js";import"./isNativeReflectConstruct-05c29d01.js";const q=z(b);function E(){const{state:s}=d.useContext(M),i=s==null?void 0:s.readOnly;return e.jsxs(e.Fragment,{children:[e.jsx(n,{type:"date",fullWidth:!0,name:"date",format:o=>o&&A(new Date(o),"MMM dd, yyyy")}),e.jsx(n,{fullWidth:!0,multiline:!0,name:"description"}),e.jsx(n,{fullWidth:!0,name:"exposure"}),e.jsxs(n,{fullWidth:!0,name:"probability",select:!i,children:[e.jsx(r,{value:"low",children:"Low"}),e.jsx(r,{value:"medium",children:"Medium"}),e.jsx(r,{value:"high",children:"High"})]}),e.jsx(n,{fullWidth:!0,name:"containment"}),e.jsxs(n,{fullWidth:!0,name:"status",select:!i,children:[e.jsx(r,{value:"identified",children:"Identified"}),e.jsx(r,{value:"contained",children:"Contained"}),e.jsx(r,{value:"resolved",children:"Resolved"})]})]})}const G=({...s})=>{const{projectId:i}=g();return e.jsx(q,{name:"risk",title:"Risk",beforeSave:({date:o,...a})=>({date:new Date(o),...a,projectId:i}),...s,children:e.jsx(E,{})})},J=S`
  query($riskProjectId: ID!, $filter: ModelRiskFilterInput) {
    project: getProject(id: $riskProjectId) {
      id
      risks(sortDirection: DESC, limit: 99, filter: $filter) {
        ...ListRisks
      }
    }
  }

  fragment ListRisks on ModelRiskConnection {
    items {
      id
      probability
      status
      description
      date
      exposure
      containment
      updatedAt
    }
  }
`,U=L({cardItem:{minHeight:50,padding:20,cursor:"pointer","& .MuiChip-root":{float:"right"},"&:hover":{backgroundColor:"whitesmoke"}}}),Y={high:"red",medium:"#ffaa60",low:"grey"};function Z({value:s,setValue:i}){return e.jsxs(Q,{size:"small",value:s,exclusive:!0,onChange:i,children:[e.jsx(y,{value:"listView",size:"small",children:e.jsx(V,{fontSize:"small"})}),e.jsx(y,{value:"cardView",size:"small",children:e.jsx(H,{fontSize:"small"})})]})}const Ce=()=>{const[s,i]=d.useState({viewMode:"listView",search:"",selectedId:null}),{projectId:o}=g(),a=d.useRef(null),I=U(),{data:w,loading:k,refetch:v}=B(J,{variables:{filter:{description:{contains:s.search}},riskProjectId:o||"_",p:o},fetchPolicy:"network-only",nextFetchPolicy:"cache-first"}),u=[...$(w,"project.risks.items",[])],p=d.useCallback(t=>{console.log(">>RiskList/index::","selectedId",t),i(l=>({...l,selectedId:t})),a.current.open()},[]);console.log(">>RiskList/index::","state",s);const C=d.useCallback(()=>{i(t=>({...t,selectedId:null})),a.current.open()},[]);return e.jsxs(m,{children:[e.jsx(P,{variant:"dialog",ref:a,dialogProps:{maxWidth:"sm",fullWidth:!0},children:e.jsx(G,{id:s.selectedId,onSubmit:()=>{a.current.close(),v()},onCancel:()=>{a.current.close()}})}),e.jsx(m,{pr:1,mb:2,display:"flex",flexDirection:"row-reverse",children:e.jsx(N,{color:"primary",variant:"contained",onClick:C,children:"Add Risk âž•"})}),e.jsx(m,{mb:2,children:e.jsx(D,{start:!0,canCreate:!1,onSearch:t=>{i(l=>({...l,search:t}))},controls:[e.jsx(Z,{value:s.viewMode,setValue:(t,l)=>{i(R=>({...R,viewMode:l}))}},"toggler")]})}),e.jsx("br",{style:{clear:"both"}}),s.viewMode==="listView"&&e.jsxs(T,{loading:k,data:u,onRowClick:t=>{console.log(">>RiskList/index::","rec?.id",t==null?void 0:t.id),p(t==null?void 0:t.id)},children:[e.jsx(c,{dataId:"description"}),e.jsx(W,{dataId:"probability",render:t=>t&&e.jsx(x,{label:h(t),style:{backgroundColor:Y[F(t)]||"grey",color:"white"}})}),e.jsx(c,{dataId:"status",render:t=>h(t)}),e.jsx(c,{dataId:"exposure"}),e.jsx(c,{dataId:"containment"}),e.jsx(j,{dataId:"date",format:"dd/MM/yyyy"}),e.jsx(j,{dataId:"updatedAt",label:"Last Activity",format:"dd/MM/yyyy"})]}),s.viewMode==="cardView"&&u.map(t=>e.jsxs(O,{className:I.cardItem,onClick:()=>p(t.id),children:[e.jsx(x,{label:t.status}),e.jsx(f,{color:"textSecondary",variant:"body2",component:"p",children:t.description}),e.jsx(f,{color:"textSecondary",variant:"body2",component:"p",children:t.date&&_(new Date(t.date),new Date,{addSuffix:!0})})]},t.id))]})};export{Ce as default};
