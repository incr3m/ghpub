import{j as s}from"./TransitionGroupContext-9d36972e.js";import{R as d}from"./index-f1f749bf.js";import{x as y,X as j}from"./index-8edd7abf.js";import{aw as h,l as A,B as m,ax as O,G as S}from"./papaparse.min-b66e70e7.js";import{u as v}from"./useGetProjectSummaryFields-0ab32aca.js";import{g as b}from"./_baseForOwn-9b89c4b6.js";import{B}from"./Button-352c3435.js";import"./assertThisInitialized-ad1db8e7.js";import"./_commonjsHelpers-042e6b4d.js";import"./Play-87fed129.js";import"./react-router-19e5b27c.js";import"./index-4d501b15.js";import"./tiny-invariant-dd7d57d2.js";import"./index-bcfaa842.js";import"./index-96c5f47c.js";import"./isNativeReflectConstruct-05c29d01.js";import"./iframe-ed7f5a3f.js";import"../sb-preview/runtime.js";import"./filter-f99df4e5.js";import"./LocalizationProvider-a287304f.js";import"./react-router-dom-60ea8218.js";import"./debounce-213cd46f.js";import"./uniq-0d482d7b.js";import"./_arrayIncludes-2cfb33ae.js";import"./cloneDeep-91467704.js";import"./isPlainObject-07477f89.js";function C({projectId:l,code:p}){const[u,i]=d.useState({integrationsByKey:null}),r=v({projectId:l,fetchPolicy:null});d.useEffect(()=>{console.log(">>project/ProjectForm::","data",r);const c=(r.integrations||[]).reduce((e,o)=>{const n=JSON.parse(o);return n.code&&(e[n.code]=n),e},{});i(e=>({...e,integrationsByKey:c}))},[r]);const[a,{loading:g}]=h(A`
      mutation($input: UpdateProjectInput!) {
        updateProject(input: $input) {
          id
          integrations
        }
      }
    `);async function f(c){const e=[],o=Object.assign({},u.integrationsByKey,{[p]:c});for(const n in o)e.push(JSON.stringify({...o[n],code:n}));await a({variables:{input:{id:l,integrations:e}}})}return{...u,loading:g,save:f,data:b(u,`integrationsByKey.${p}`),project:r}}function Z({code:l,projectId:p,onSubmit:u}){const[i,r]=d.useState({loading:!1,selectedAccount:null,accountOptions:[],accountMapping:{}}),{data:a,save:g}=C({code:l,projectId:p});console.log(">>xero/XeroForm::","integration",a);const f=d.useCallback(async()=>{if(i.accountOptions.length>0)return;r(t=>({...t,loading:!0}));const o=await y({index:"accountingApi",type:"getAccounts",body:({tenantId:t})=>({args:[t]})}),n={},x=((o==null?void 0:o.Accounts)||[]).map(t=>(n[t.AccountID]=t,{value:t.AccountID,text:`${t.Code} - ${t.Name}`,code:t.Code,name:t.Name}));r(t=>({...t,accountOptions:x,accountMapping:n,loading:!1}))},[i.accountOptions]);console.log(">>xero/XeroForm::","state",i);let c=[];const e=i.selectedAccount||(a==null?void 0:a.account);return i.accountOptions.length>0?c=i.accountOptions:e&&(c=[e]),s.jsx(m,{p:2,children:s.jsxs(j,{children:[s.jsxs(m,{mt:2,mb:2,minWidth:"400",children:[s.jsx(m,{minHeight:"4px",children:i.loading&&s.jsx(O,{variant:"indeterminate"})}),s.jsx(S,{fullWidth:!0,variant:"default",value:e,label:"Account Code",onOpen:f,onChange:(o,n)=>{console.log(">>xero/XeroForm::","selectedAccount",n),r(x=>({...x,selectedAccount:n}))},customOptions:c},a)]}),s.jsx(m,{display:"flex",flexDirection:"row-reverse",children:s.jsx(B,{variant:"contained",disabled:i.loading,onClick:async()=>{const o={...a,account:i.selectedAccount};await g(o),u(o)},color:"primary",children:"Save"})})]})})}export{Z as default};
